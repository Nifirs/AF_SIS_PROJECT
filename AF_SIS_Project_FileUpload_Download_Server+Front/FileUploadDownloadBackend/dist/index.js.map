{"version":3,"sources":["../src/index.js"],"names":["storageDir","path","join","__dirname","storageConfig","multer","diskStorage","destination","req","file","cb","filename","Date","now","extname","originalname","upload","storage","PORT","app","server","http","createServer","use","exposedHeaders","bodyParser","json","limit","set","err","db","console","log","AppRouter","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;AACA;;;;;;AAEA,IAAMA,aAAaC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,SAA3B,CAAnB;;AAEA,IAAMC,gBAAgBC,iBAAOC,WAAP,CAAmB;AACrCC,iBAAa,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAkB;AAC3BA,WAAG,IAAH,EAASV,UAAT;AACH,KAHoC;AAIrCW,cAAU,kBAACH,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAgB;AACtBA,WAAG,IAAH,EAAQE,KAAKC,GAAL,KAAaZ,eAAKa,OAAL,CAAaL,KAAKM,YAAlB,CAArB;AACH;AANoC,CAAnB,CAAtB;;AASA,IAAMC,SAAS,sBAAO,EAACC,SAASb,aAAV,EAAP,CAAf;;AAEA,IAAMc,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAGAJ,IAAII,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB;AADP,CAAL,CAAR;;AAIAL,IAAII,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAIAR,IAAIS,GAAJ,CAAQ,MAAR,EAAgBzB,SAAhB;AACAgB,IAAIS,GAAJ,CAAQ,YAAR,EAAsB5B,UAAtB;AACAmB,IAAIS,GAAJ,CAAQ,QAAR,EAAkBZ,MAAlB;;AAIA,uBAAQ,UAACa,GAAD,EAAMC,EAAN,EAAa;;AAEjB,QAAGD,GAAH,EAAO;AACHE,gBAAQC,GAAR,CAAY,qCAAZ,EAAmDH,GAAnD;AACA,cAAOA,GAAP;AACH;;AAEDV,QAAIW,EAAJ,GAASA,EAAT;AACAX,QAAIS,GAAJ,CAAQ,IAAR,EAAcE,EAAd;;AAGA;AACA,QAAIG,gBAAJ,CAAcd,GAAd;;AAMAA,QAAIC,MAAJ,CAAWc,MAAX,CAAkBC,QAAQC,GAAR,CAAYlB,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC9Ca,gBAAQC,GAAR,6BAAsCb,IAAIC,MAAJ,CAAWiB,OAAX,GAAqBC,IAA3D;AACH,KAFD;AAIH,CAtBD;;kBA2BenB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan'\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport path from 'path';\r\n\r\n\r\n\r\nimport {connect} from \"./database\";\r\nimport AppRouter from './router';\r\n\r\nconst storageDir = path.join(__dirname, '..', 'storage');\r\n\r\nconst storageConfig = multer.diskStorage({\r\n    destination: (req, file, cb)=> {\r\n        cb(null, storageDir)\r\n    },\r\n    filename: (req,file,cb)=> {\r\n        cb(null,Date.now() + path.extname(file.originalname))\r\n    }\r\n});\r\n\r\nconst upload = multer({storage: storageConfig})\r\n\r\nconst PORT = 4000;\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\napp.use(morgan('dev'));\r\n\r\n\r\napp.use(cors({\r\n    exposedHeaders: \"*\"\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n    limit: '50mb'\r\n}));\r\n\r\napp.set('root', __dirname);\r\napp.set('storageDir', storageDir);\r\napp.set('upload', upload);\r\n\r\n\r\n\r\nconnect((err, db) => {\r\n\r\n    if(err){\r\n        console.log(\"An error connecting to the database\", err);\r\n        throw (err);\r\n    }\r\n\r\n    app.db = db;\r\n    app.set('db', db);\r\n\r\n\r\n    // init routers.\r\n    new AppRouter(app);\r\n\r\n\r\n\r\n\r\n\r\n    app.server.listen(process.env.PORT || PORT, () => {\r\n        console.log(`App is running on port ${app.server.address().port}`);\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n\r\nexport default app;\r\n\r\n\r\n"]}
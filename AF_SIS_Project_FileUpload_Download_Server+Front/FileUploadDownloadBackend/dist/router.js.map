{"version":3,"sources":["../src/router.js"],"names":["AppRouter","app","setupRouters","db","get","uploadDir","upload","req","res","next","status","json","version","post","array","files","_","fileModels","each","fileObject","newFile","File","initWithObject","toJSON","push","length","collection","insertMany","err","result","error","message","fileId","params","id","find","_id","toArray","fileName","filePath","path","join","download","console","log","postId","postObjectId","ObjectID","limit","results","fileIds","$in"],"mappings":"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","file":"router.js","sourcesContent":["import {version} from '../package.json';\nimport _ from 'lodash';\nimport File from './models/file';\nimport {ObjectID} from 'mongodb';\nimport path from 'path'\n\n\n\nclass AppRouter {\n\n    constructor(app) {\n        this.app = app;\n        this.setupRouters();\n    }\n\n\n    setupRouters() {\n\n        const app = this.app;\n        const db = app.get('db');\n        const uploadDir = app.get('storageDir');\n        const upload = app.get('upload');\n\n        app.get('/', (req, res, next) => {\n\n            return res.status(200).json({\n                version: version\n            });\n\n        });\n\n\n\n        app.post('/api/upload', upload.array('files'), (req, res, next) => {\n            const files = _.get(req, 'files', []);\n\n            let fileModels = [];\n\n            _.each(files, (fileObject)=>{\n               const newFile = new File(app).initWithObject(fileObject).toJSON();\n               fileModels.push(newFile);\n            });\n\n            if (fileModels.length){\n\n                db.collection('files').insertMany(fileModels, (err, result) => {\n                    if (err) {\n                        return res.status(503).json({\n                            error: {\n                                message: \"Unable saved your files\",\n                            }\n                        });\n                    }\n\n                    return res.json({\n                        files: fileModels\n                    });\n                });\n\n            } else {\n                return res.status(503).json({\n                    error: {\n                        message: \"Files upload is required\",\n                    }\n\n                });\n            }\n        });\n\n        app.get('/api/download/:id', (req,res,next)=>{\n            const fileId = req.params.id;\n\n            db.collection('files').find({_id:ObjectID(fileId)}).toArray((err,result)=>{\n\n                const fileName = _.get(result, '[0].name');\n                if (err || !fileName){\n                    return res.status(404).json({\n                        error: {\n                            message: \"File not found\"\n                        }\n                    })\n                }\n                const filePath = path.join(uploadDir,fileName);\n\n                return res.download(filePath,fileName,(err)=> {\n                    if (err){\n                        return res.status(404).json({\n                            error: {\n                                message: \"File not found\"\n                            }\n                        });\n                    } else {\n                        console.log(\"File is downloaded\");\n                    }\n                });\n            });\n\n        });\n\n        app.get('/api/download', (req,res,next)=>{\n            const fileId = req.params.id;\n\n\n            db.collection('files').find().toArray((err,result)=>{\n\n\n                const fileName = _.get(result, '[0].name');\n                if (err || !fileName){\n                    return res.status(404).json({\n                        error: {\n                            message: \"File not found\"\n                        }\n                    })\n                }\n                const filePath = path.join(uploadDir,fileName);\n\n                return res.download(filePath,fileName,(err)=> {\n                    if (err){\n                        return res.status(404).json({\n                            error: {\n                                message: \"File not found\"\n                            }\n                        });\n                    } else {\n                        console.log(\"File is downloaded\");\n                    }\n                });\n            });\n\n        });\n\n\n\n        app.get('/api/posts/:id', (req,res,next)=>{\n            const postId = _.get(req,'params.id');\n            let postObjectId = null;\n            try {\n                postObjectId = new ObjectID(postId);\n            }catch (err) {\n                return res.status(404).json({error: {message: 'File not founddddddd.'}})\n            }\n\n            db.collection('posts').find({_id:postObjectId}).limit(1).toArray((err,results)=>{\n                let result = _.get(results,'[0]');\n\n                if (err || !result) {\n                    return res.status(404).json({error: {message: 'File not found11111'}});\n\n                }\n\n                    const fileIds = _.get(result,'files', []);\n\n                    db.collection('files').find({_id: {$in: fileIds}}).toArray((err,files)=>{\n                        if (err || !files || !files.length){\n                            return res.status(404).json({error: {message: 'File not found222'}});\n                        }\n\n                        result.files = files;\n\n                        return res.json(result);\n\n                    })\n\n            })\n        })\n\n     }\n\n\n\n}\n\nexport default AppRouter;"]}